{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name cats.builtin, :imports nil, :requires {ctx cats.context, p cats.protocols, cats.context cats.context, cats.protocols cats.protocols, maybe cats.monad.maybe, clojure.set clojure.set, m cats.core, util cats.util, cats.core cats.core, cats.monad.maybe cats.monad.maybe, cats.util cats.util, s clojure.set}, :cljs.spec/speced-vars [], :uses nil, :defs {->t_cats$builtin45391 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45392])), :file nil}, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45391, :variadic false, :file ".cljs_node_repl/cats/builtin.cljc", :method-params ([meta45392]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 502, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45392])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cats$builtin45400 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45401])), :file nil}, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45400, :variadic false, :file ".cljs_node_repl/cats/builtin.cljc", :method-params ([meta45401]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 553, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45401])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, range-context {:name cats.builtin/range-context, :file ".cljs_node_repl/cats/builtin.cljc", :line 233, :column 1, :end-line 233, :end-column 19, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_node_repl/cats/builtin.cljc", :line 233, :column 6, :end-line 233, :end-column 19}, :tag cats.builtin/t_cats$builtin45353}, ->t_cats$builtin45353 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cats.protocols/Foldable cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45354])), :file nil}, :protocols #{cljs.core/IMeta cats.protocols/Foldable cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45353, :variadic false, :file ".cljs_node_repl/cats/builtin.cljc", :method-params ([meta45354]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 234, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45354])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, function-context {:name cats.builtin/function-context, :file ".cljs_node_repl/cats/builtin.cljc", :line 437, :column 1, :end-line 437, :end-column 22, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_node_repl/cats/builtin.cljc", :line 437, :column 6, :end-line 437, :end-column 22}, :tag cats.builtin/t_cats$builtin45385}, ->t_cats$builtin45394 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45395])), :file nil}, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45394, :variadic false, :file ".cljs_node_repl/cats/builtin.cljc", :method-params ([meta45395]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 519, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45395])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, all-monoid {:name cats.builtin/all-monoid, :file ".cljs_node_repl/cats/builtin.cljc", :line 501, :column 1, :end-line 501, :end-column 16, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_node_repl/cats/builtin.cljc", :line 501, :column 6, :end-line 501, :end-column 16}, :tag cats.builtin/t_cats$builtin45391}, t_cats$builtin45342 {:num-fields 1, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Traversable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45342, :file ".cljs_node_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 158, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, vector-context {:name cats.builtin/vector-context, :file ".cljs_node_repl/cats/builtin.cljc", :line 262, :column 1, :end-line 262, :end-column 20, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_node_repl/cats/builtin.cljc", :line 262, :column 6, :end-line 262, :end-column 20}, :tag cats.builtin/t_cats$builtin45356}, ->t_cats$builtin45374 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45375])), :file nil}, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45374, :variadic false, :file ".cljs_node_repl/cats/builtin.cljc", :method-params ([meta45375]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 384, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45375])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cats$builtin45385 {:num-fields 1, :protocols #{cats.protocols/Semigroup cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45385, :file ".cljs_node_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 438, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cats$builtin45394 {:num-fields 1, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45394, :file ".cljs_node_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 519, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, lazy-sequence-context {:name cats.builtin/lazy-sequence-context, :file ".cljs_node_repl/cats/builtin.cljc", :line 157, :column 1, :end-line 157, :end-column 27, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_node_repl/cats/builtin.cljc", :line 157, :column 6, :end-line 157, :end-column 27}, :tag cats.builtin/t_cats$builtin45342}, t_cats$builtin45388 {:num-fields 1, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45388, :file ".cljs_node_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 485, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cats$builtin45385 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45386])), :file nil}, :protocols #{cats.protocols/Semigroup cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45385, :variadic false, :file ".cljs_node_repl/cats/builtin.cljc", :method-params ([meta45386]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 438, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45386])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cats$builtin45391 {:num-fields 1, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45391, :file ".cljs_node_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 502, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, map-context {:name cats.builtin/map-context, :file ".cljs_node_repl/cats/builtin.cljc", :line 335, :column 1, :end-line 335, :end-column 17, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_node_repl/cats/builtin.cljc", :line 335, :column 6, :end-line 335, :end-column 17}, :tag cats.builtin/t_cats$builtin45367}, t_cats$builtin45367 {:num-fields 1, :protocols #{cats.protocols/Semigroup cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45367, :file ".cljs_node_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 336, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cats$builtin45291 {:num-fields 1, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Traversable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45291, :file ".cljs_node_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 51, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cats$builtin45356 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Traversable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45357])), :file nil}, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Traversable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45356, :variadic false, :file ".cljs_node_repl/cats/builtin.cljc", :method-params ([meta45357]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 263, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45357])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, sum-monoid {:name cats.builtin/sum-monoid, :file ".cljs_node_repl/cats/builtin.cljc", :line 518, :column 1, :end-line 518, :end-column 16, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_node_repl/cats/builtin.cljc", :line 518, :column 6, :end-line 518, :end-column 16}, :tag cats.builtin/t_cats$builtin45394}, t_cats$builtin45356 {:num-fields 1, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Traversable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45356, :file ".cljs_node_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 263, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cats$builtin45388 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45389])), :file nil}, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45388, :variadic false, :file ".cljs_node_repl/cats/builtin.cljc", :method-params ([meta45389]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 485, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45389])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cats$builtin45374 {:num-fields 1, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45374, :file ".cljs_node_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 384, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cats$builtin45353 {:num-fields 1, :protocols #{cljs.core/IMeta cats.protocols/Foldable cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45353, :file ".cljs_node_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 234, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, prod-monoid {:name cats.builtin/prod-monoid, :file ".cljs_node_repl/cats/builtin.cljc", :line 535, :column 1, :end-line 535, :end-column 17, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_node_repl/cats/builtin.cljc", :line 535, :column 6, :end-line 535, :end-column 17}, :tag cats.builtin/t_cats$builtin45397}, t_cats$builtin45397 {:num-fields 1, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45397, :file ".cljs_node_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 536, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cats$builtin45367 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45368])), :file nil}, :protocols #{cats.protocols/Semigroup cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45367, :variadic false, :file ".cljs_node_repl/cats/builtin.cljc", :method-params ([meta45368]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 336, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45368])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cats$builtin45291 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Traversable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45292])), :file nil}, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Traversable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45291, :variadic false, :file ".cljs_node_repl/cats/builtin.cljc", :method-params ([meta45292]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45292])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cats$builtin45342 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Traversable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45343])), :file nil}, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Traversable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45342, :variadic false, :file ".cljs_node_repl/cats/builtin.cljc", :method-params ([meta45343]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 158, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45343])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, sequence-context {:name cats.builtin/sequence-context, :file ".cljs_node_repl/cats/builtin.cljc", :line 50, :column 1, :end-line 50, :end-column 22, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_node_repl/cats/builtin.cljc", :line 50, :column 6, :end-line 50, :end-column 22}, :tag cats.builtin/t_cats$builtin45291}, ->t_cats$builtin45397 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45398])), :file nil}, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45397, :variadic false, :file ".cljs_node_repl/cats/builtin.cljc", :method-params ([meta45398]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 536, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45398])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cats$builtin45400 {:num-fields 1, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45400, :file ".cljs_node_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 553, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, any-monoid {:name cats.builtin/any-monoid, :file ".cljs_node_repl/cats/builtin.cljc", :line 484, :column 1, :end-line 484, :end-column 16, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_node_repl/cats/builtin.cljc", :line 484, :column 6, :end-line 484, :end-column 16}, :tag cats.builtin/t_cats$builtin45388}, set-context {:name cats.builtin/set-context, :file ".cljs_node_repl/cats/builtin.cljc", :line 383, :column 1, :end-line 383, :end-column 17, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_node_repl/cats/builtin.cljc", :line 383, :column 6, :end-line 383, :end-column 17}, :tag cats.builtin/t_cats$builtin45374}, string-monoid {:name cats.builtin/string-monoid, :file ".cljs_node_repl/cats/builtin.cljc", :line 552, :column 1, :end-line 552, :end-column 19, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_node_repl/cats/builtin.cljc", :line 552, :column 6, :end-line 552, :end-column 19}, :tag cats.builtin/t_cats$builtin45400}}, :cljs.spec/registry-ref [], :require-macros {maybe cats.monad.maybe, cats.monad.maybe cats.monad.maybe, m cats.core, cats.core cats.core}, :cljs.analyzer/constants {:seen #{meta45389 meta45368 meta45386 meta45398 meta45375 meta45392 meta45357 meta45292 meta45395 meta45401 meta45354 meta45343}, :order [meta45292 meta45343 meta45354 meta45357 meta45368 meta45375 meta45386 meta45389 meta45392 meta45395 meta45398 meta45401]}, :doc "Clojure(Script) built-in types extensions."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name cats.builtin, :imports nil, :requires {ctx cats.context, p cats.protocols, cats.context cats.context, cats.protocols cats.protocols, maybe cats.monad.maybe, clojure.set clojure.set, m cats.core, util cats.util, cats.core cats.core, cats.monad.maybe cats.monad.maybe, cats.util cats.util, s clojure.set}, :cljs.spec/speced-vars [], :uses nil, :defs {range-context {:name cats.builtin/range-context, :file ".cljs_rhino_repl/cats/builtin.cljc", :line 233, :column 1, :end-line 233, :end-column 19, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_rhino_repl/cats/builtin.cljc", :line 233, :column 6, :end-line 233, :end-column 19}, :tag cats.builtin/t_cats$builtin45171}, ->t_cats$builtin45206 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45207])), :file nil}, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45206, :variadic false, :file ".cljs_rhino_repl/cats/builtin.cljc", :method-params ([meta45207]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 485, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45207])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, function-context {:name cats.builtin/function-context, :file ".cljs_rhino_repl/cats/builtin.cljc", :line 437, :column 1, :end-line 437, :end-column 22, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_rhino_repl/cats/builtin.cljc", :line 437, :column 6, :end-line 437, :end-column 22}, :tag cats.builtin/t_cats$builtin45203}, t_cats$builtin45212 {:num-fields 1, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45212, :file ".cljs_rhino_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 519, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cats$builtin45203 {:num-fields 1, :protocols #{cats.protocols/Semigroup cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45203, :file ".cljs_rhino_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 438, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cats$builtin45160 {:num-fields 1, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Traversable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45160, :file ".cljs_rhino_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 158, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, all-monoid {:name cats.builtin/all-monoid, :file ".cljs_rhino_repl/cats/builtin.cljc", :line 501, :column 1, :end-line 501, :end-column 16, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_rhino_repl/cats/builtin.cljc", :line 501, :column 6, :end-line 501, :end-column 16}, :tag cats.builtin/t_cats$builtin45209}, vector-context {:name cats.builtin/vector-context, :file ".cljs_rhino_repl/cats/builtin.cljc", :line 262, :column 1, :end-line 262, :end-column 20, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_rhino_repl/cats/builtin.cljc", :line 262, :column 6, :end-line 262, :end-column 20}, :tag cats.builtin/t_cats$builtin45174}, t_cats$builtin45218 {:num-fields 1, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45218, :file ".cljs_rhino_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 553, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, lazy-sequence-context {:name cats.builtin/lazy-sequence-context, :file ".cljs_rhino_repl/cats/builtin.cljc", :line 157, :column 1, :end-line 157, :end-column 27, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_rhino_repl/cats/builtin.cljc", :line 157, :column 6, :end-line 157, :end-column 27}, :tag cats.builtin/t_cats$builtin45160}, ->t_cats$builtin45203 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45204])), :file nil}, :protocols #{cats.protocols/Semigroup cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45203, :variadic false, :file ".cljs_rhino_repl/cats/builtin.cljc", :method-params ([meta45204]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 438, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45204])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cats$builtin45209 {:num-fields 1, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45209, :file ".cljs_rhino_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 502, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cats$builtin45192 {:num-fields 1, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45192, :file ".cljs_rhino_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 384, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, map-context {:name cats.builtin/map-context, :file ".cljs_rhino_repl/cats/builtin.cljc", :line 335, :column 1, :end-line 335, :end-column 17, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_rhino_repl/cats/builtin.cljc", :line 335, :column 6, :end-line 335, :end-column 17}, :tag cats.builtin/t_cats$builtin45185}, t_cats$builtin45206 {:num-fields 1, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45206, :file ".cljs_rhino_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 485, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cats$builtin45109 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Traversable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45110])), :file nil}, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Traversable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45109, :variadic false, :file ".cljs_rhino_repl/cats/builtin.cljc", :method-params ([meta45110]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45110])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, sum-monoid {:name cats.builtin/sum-monoid, :file ".cljs_rhino_repl/cats/builtin.cljc", :line 518, :column 1, :end-line 518, :end-column 16, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_rhino_repl/cats/builtin.cljc", :line 518, :column 6, :end-line 518, :end-column 16}, :tag cats.builtin/t_cats$builtin45212}, ->t_cats$builtin45212 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45213])), :file nil}, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45212, :variadic false, :file ".cljs_rhino_repl/cats/builtin.cljc", :method-params ([meta45213]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 519, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45213])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cats$builtin45160 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Traversable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45161])), :file nil}, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Traversable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45160, :variadic false, :file ".cljs_rhino_repl/cats/builtin.cljc", :method-params ([meta45161]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 158, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45161])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cats$builtin45171 {:num-fields 1, :protocols #{cljs.core/IMeta cats.protocols/Foldable cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45171, :file ".cljs_rhino_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 234, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cats$builtin45215 {:num-fields 1, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45215, :file ".cljs_rhino_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 536, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, prod-monoid {:name cats.builtin/prod-monoid, :file ".cljs_rhino_repl/cats/builtin.cljc", :line 535, :column 1, :end-line 535, :end-column 17, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_rhino_repl/cats/builtin.cljc", :line 535, :column 6, :end-line 535, :end-column 17}, :tag cats.builtin/t_cats$builtin45215}, ->t_cats$builtin45218 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45219])), :file nil}, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45218, :variadic false, :file ".cljs_rhino_repl/cats/builtin.cljc", :method-params ([meta45219]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 553, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45219])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cats$builtin45185 {:num-fields 1, :protocols #{cats.protocols/Semigroup cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45185, :file ".cljs_rhino_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 336, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cats$builtin45174 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Traversable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45175])), :file nil}, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Traversable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45174, :variadic false, :file ".cljs_rhino_repl/cats/builtin.cljc", :method-params ([meta45175]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 263, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45175])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, sequence-context {:name cats.builtin/sequence-context, :file ".cljs_rhino_repl/cats/builtin.cljc", :line 50, :column 1, :end-line 50, :end-column 22, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_rhino_repl/cats/builtin.cljc", :line 50, :column 6, :end-line 50, :end-column 22}, :tag cats.builtin/t_cats$builtin45109}, ->t_cats$builtin45185 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45186])), :file nil}, :protocols #{cats.protocols/Semigroup cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45185, :variadic false, :file ".cljs_rhino_repl/cats/builtin.cljc", :method-params ([meta45186]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 336, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45186])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cats$builtin45174 {:num-fields 1, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Traversable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45174, :file ".cljs_rhino_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 263, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cats$builtin45192 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45193])), :file nil}, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45192, :variadic false, :file ".cljs_rhino_repl/cats/builtin.cljc", :method-params ([meta45193]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 384, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45193])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cats$builtin45209 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45210])), :file nil}, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45209, :variadic false, :file ".cljs_rhino_repl/cats/builtin.cljc", :method-params ([meta45210]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 502, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45210])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, any-monoid {:name cats.builtin/any-monoid, :file ".cljs_rhino_repl/cats/builtin.cljc", :line 484, :column 1, :end-line 484, :end-column 16, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_rhino_repl/cats/builtin.cljc", :line 484, :column 6, :end-line 484, :end-column 16}, :tag cats.builtin/t_cats$builtin45206}, ->t_cats$builtin45215 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45216])), :file nil}, :protocols #{cats.protocols/Semigroup cljs.core/IMeta cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45215, :variadic false, :file ".cljs_rhino_repl/cats/builtin.cljc", :method-params ([meta45216]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 536, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45216])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cats$builtin45109 {:num-fields 1, :protocols #{cats.protocols/Semigroup cats.protocols/MonadPlus cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Foldable cats.protocols/Traversable cats.protocols/Monoid cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative cats.protocols/MonadZero cats.protocols/Printable}, :name cats.builtin/t_cats$builtin45109, :file ".cljs_rhino_repl/cats/builtin.cljc", :type true, :anonymous true, :column 3, :line 51, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, set-context {:name cats.builtin/set-context, :file ".cljs_rhino_repl/cats/builtin.cljc", :line 383, :column 1, :end-line 383, :end-column 17, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_rhino_repl/cats/builtin.cljc", :line 383, :column 6, :end-line 383, :end-column 17}, :tag cats.builtin/t_cats$builtin45192}, ->t_cats$builtin45171 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cats.protocols/Foldable cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta45172])), :file nil}, :protocols #{cljs.core/IMeta cats.protocols/Foldable cats.protocols/Context cljs.core/IWithMeta cats.protocols/Printable}, :name cats.builtin/->t_cats$builtin45171, :variadic false, :file ".cljs_rhino_repl/cats/builtin.cljc", :method-params ([meta45172]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 234, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta45172])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, string-monoid {:name cats.builtin/string-monoid, :file ".cljs_rhino_repl/cats/builtin.cljc", :line 552, :column 1, :end-line 552, :end-column 19, :meta {:file "/home/parker/clojure-script-projects/fermat/.cljs_rhino_repl/cats/builtin.cljc", :line 552, :column 6, :end-line 552, :end-column 19}, :tag cats.builtin/t_cats$builtin45218}}, :cljs.spec/registry-ref [], :require-macros {maybe cats.monad.maybe, cats.monad.maybe cats.monad.maybe, m cats.core, cats.core cats.core}, :cljs.analyzer/constants {:seen #{meta45204 meta45175 meta45213 meta45207 meta45216 meta45219 meta45161 meta45186 meta45172 meta45110 meta45210 meta45193}, :order [meta45110 meta45161 meta45172 meta45175 meta45186 meta45193 meta45204 meta45207 meta45210 meta45213 meta45216 meta45219]}, :doc "Clojure(Script) built-in types extensions."}
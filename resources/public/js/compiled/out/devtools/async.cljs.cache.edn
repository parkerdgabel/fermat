{:rename-macros {}, :renames {}, :externs {Promise {}, setTimeout {}, Error {}, Infinity {}}, :use-macros {oset devtools.oops, ocall devtools.oops}, :excludes #{}, :name devtools.async, :imports nil, :requires {next-tick goog.async.nextTick, goog.async.nextTick goog.async.nextTick, ua goog.labs.userAgent.browser, goog.labs.userAgent.browser goog.labs.userAgent.browser, context devtools.context, devtools.context devtools.context}, :cljs.spec/speced-vars [], :uses nil, :defs {*installed* {:name devtools.async/*installed*, :file "resources/public/js/compiled/out/devtools/async.cljs", :line 19, :column 1, :end-line 19, :end-column 27, :dynamic true, :meta {:file "/home/parker/clojure-script-projects/fermat/resources/public/js/compiled/out/devtools/async.cljs", :line 19, :column 16, :end-line 19, :end-column 27, :dynamic true}, :tag boolean}, fixed-chrome-version-for-async {:name devtools.async/fixed-chrome-version-for-async, :file "resources/public/js/compiled/out/devtools/async.cljs", :line 10, :column 1, :end-line 10, :end-column 46, :dynamic true, :meta {:file "/home/parker/clojure-script-projects/fermat/resources/public/js/compiled/out/devtools/async.cljs", :line 10, :column 16, :end-line 10, :end-column 46, :dynamic true}, :tag string}, *original-set-immediate* {:name devtools.async/*original-set-immediate*, :file "resources/public/js/compiled/out/devtools/async.cljs", :line 20, :column 1, :end-line 20, :end-column 40, :dynamic true, :meta {:file "/home/parker/clojure-script-projects/fermat/resources/public/js/compiled/out/devtools/async.cljs", :line 20, :column 16, :end-line 20, :end-column 40, :dynamic true}, :tag clj-nil}, install-async-set-immediate! {:protocol-inline nil, :meta {:file "/home/parker/clojure-script-projects/fermat/resources/public/js/compiled/out/devtools/async.cljs", :line 32, :column 7, :end-line 32, :end-column 35, :arglists (quote ([]))}, :name devtools.async/install-async-set-immediate!, :variadic false, :file "resources/public/js/compiled/out/devtools/async.cljs", :end-column 35, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, install! {:protocol-inline nil, :meta {:file "/home/parker/clojure-script-projects/fermat/resources/public/js/compiled/out/devtools/async.cljs", :line 44, :column 7, :end-line 44, :end-column 15, :arglists (quote ([]))}, :name devtools.async/install!, :variadic false, :file "resources/public/js/compiled/out/devtools/async.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-not-needed-message {:protocol-inline nil, :meta {:file "/home/parker/clojure-script-projects/fermat/resources/public/js/compiled/out/devtools/async.cljs", :line 15, :column 17, :end-line 15, :end-column 39, :dynamic true, :arglists (quote ([]))}, :name devtools.async/get-not-needed-message, :variadic false, :file "resources/public/js/compiled/out/devtools/async.cljs", :end-column 39, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, needed? {:protocol-inline nil, :meta {:file "/home/parker/clojure-script-projects/fermat/resources/public/js/compiled/out/devtools/async.cljs", :line 12, :column 17, :end-line 12, :end-column 24, :dynamic true, :arglists (quote ([]))}, :name devtools.async/needed?, :variadic false, :file "resources/public/js/compiled/out/devtools/async.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, available? {:protocol-inline nil, :meta {:file "/home/parker/clojure-script-projects/fermat/resources/public/js/compiled/out/devtools/async.cljs", :line 7, :column 17, :end-line 7, :end-column 27, :dynamic true, :arglists (quote ([]))}, :name devtools.async/available?, :variadic false, :file "resources/public/js/compiled/out/devtools/async.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, uninstall-async-set-immediate! {:protocol-inline nil, :meta {:file "/home/parker/clojure-script-projects/fermat/resources/public/js/compiled/out/devtools/async.cljs", :line 36, :column 7, :end-line 36, :end-column 37, :arglists (quote ([]))}, :name devtools.async/uninstall-async-set-immediate!, :variadic false, :file "resources/public/js/compiled/out/devtools/async.cljs", :end-column 37, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, installed? {:protocol-inline nil, :meta {:file "/home/parker/clojure-script-projects/fermat/resources/public/js/compiled/out/devtools/async.cljs", :line 41, :column 7, :end-line 41, :end-column 17, :arglists (quote ([]))}, :name devtools.async/installed?, :variadic false, :file "resources/public/js/compiled/out/devtools/async.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, rethrow-outside-promise {:protocol-inline nil, :meta {:file "/home/parker/clojure-script-projects/fermat/resources/public/js/compiled/out/devtools/async.cljs", :line 23, :column 7, :end-line 23, :end-column 30, :arglists (quote ([e]))}, :name devtools.async/rethrow-outside-promise, :variadic false, :file "resources/public/js/compiled/out/devtools/async.cljs", :end-column 30, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, uninstall! {:protocol-inline nil, :meta {:file "/home/parker/clojure-script-projects/fermat/resources/public/js/compiled/out/devtools/async.cljs", :line 53, :column 7, :end-line 53, :end-column 17, :arglists (quote ([]))}, :name devtools.async/uninstall!, :variadic false, :file "resources/public/js/compiled/out/devtools/async.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, promise-based-set-immediate {:protocol-inline nil, :meta {:file "/home/parker/clojure-script-projects/fermat/resources/public/js/compiled/out/devtools/async.cljs", :line 26, :column 7, :end-line 26, :end-column 34, :arglists (quote ([callback]))}, :name devtools.async/promise-based-set-immediate, :variadic false, :file "resources/public/js/compiled/out/devtools/async.cljs", :end-column 34, :method-params ([callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([callback]))}}, :cljs.spec/registry-ref [], :require-macros {devtools.oops devtools.oops}, :doc nil}
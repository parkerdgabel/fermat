{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name devtools.context, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {get-root {:protocol-inline nil, :meta {:file "/home/parker/clojure-script-projects/fermat/resources/public/js/compiled/out/devtools/context.cljs", :line 4, :column 17, :end-line 4, :end-column 25, :dynamic true, :arglists (quote ([]))}, :name devtools.context/get-root, :variadic false, :file "resources/public/js/compiled/out/devtools/context.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 4, :end-line 4, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-console {:protocol-inline nil, :meta {:file "/home/parker/clojure-script-projects/fermat/resources/public/js/compiled/out/devtools/context.cljs", :line 7, :column 17, :end-line 7, :end-column 28, :dynamic true, :arglists (quote ([]))}, :name devtools.context/get-console, :variadic false, :file "resources/public/js/compiled/out/devtools/context.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros nil, :doc nil}